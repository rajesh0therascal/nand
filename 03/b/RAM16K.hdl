// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
DMux4Way(in = load, sel = address[12..13], a = r1, b= r2, c= r3, d= r4);
RAM4K(in = in, load = r1, address = address[0..11], out = r1o);
RAM4K(in = in, load = r2, address = address[0..11], out = r2o);
RAM4K(in = in, load = r3, address = address[0..11], out = r3o);
RAM4K(in = in, load = r4, address = address[0..11], out = r4o);
Mux4Way16(a = r1o, b = r2o, c= r3o, d= r4o, sel = address[12..13], out = out);
    // Put your code here:
}